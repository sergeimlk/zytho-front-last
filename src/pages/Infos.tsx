import React from 'react';
import '../styles/Infos.css';

const Infos: React.FC = () => {
  const techStack = [
    {
      category: "Frontend",
      items: [
        { name: "React", icon: "‚öõÔ∏è", description: "J'ai choisi React comme biblioth√®que principale pour l'interface utilisateur" },
        { name: "TypeScript", icon: "üìò", description: "J'utilise TypeScript pour un code plus robuste et typ√©" },
        { name: "React Router", icon: "üõ£Ô∏è", description: "J'ai impl√©ment√© le routage avec React Router" },
        { name: "CSS Modules", icon: "üé®", description: "J'ai opt√© pour des styles modulaires pour une meilleure maintenabilit√©" }
      ]
    },
    {
      category: "API & Int√©gration",
      items: [
        { name: "Punk API", icon: "üç∫", description: "J'utilise cette API publique pour les donn√©es de bi√®res" },
        { name: "Axios", icon: "üîÑ", description: "J'ai choisi Axios pour g√©rer mes requ√™tes HTTP" },
        { name: "React Query", icon: "üìä", description: "Je g√®re le cache et les √©tats avec React Query" },
        { name: "TypeScript Types", icon: "üìã", description: "J'ai cr√©√© des types personnalis√©s pour les donn√©es" }
      ]
    },
    {
      category: "Outils de D√©veloppement",
      items: [
        { name: "Vite", icon: "‚ö°", description: "J'ai configur√© Vite pour un d√©veloppement rapide" },
        { name: "ESLint", icon: "üîç", description: "J'utilise ESLint pour maintenir la qualit√© du code" },
        { name: "Git", icon: "üìö", description: "Je g√®re les versions avec Git" },
        { name: "npm", icon: "üì¶", description: "Je g√®re mes d√©pendances avec npm" }
      ]
    },
    {
      category: "Design & UI",
      items: [
        { name: "Responsive Design", icon: "üì±", description: "J'ai cr√©√© une interface adaptative" },
        { name: "Dark Mode", icon: "üåô", description: "J'ai impl√©ment√© un th√®me sombre par d√©faut" },
        { name: "Custom Components", icon: "üéØ", description: "J'ai d√©velopp√© des composants sur mesure" },
        { name: "Animations", icon: "‚ú®", description: "J'ai ajout√© des animations fluides" }
      ]
    }
  ];

  const developmentSteps = [
    {
      title: "1. Initialisation du Projet",
      icon: "üöÄ",
      steps: [
        "J'ai configur√© Vite avec React et TypeScript",
        "J'ai structur√© mes dossiers de mani√®re logique",
        "J'ai install√© les d√©pendances n√©cessaires"
      ]
    },
    {
      title: "2. Int√©gration de l'API",
      icon: "üîå",
      steps: [
        "J'ai configur√© Axios pour mes requ√™tes HTTP",
        "J'ai cr√©√© mes types TypeScript pour les donn√©es",
        "J'ai mis en place React Query pour le cache",
        "J'ai d√©velopp√© mes hooks personnalis√©s"
      ]
    },
    {
      title: "3. Architecture & Design",
      icon: "üèóÔ∏è",
      steps: [
        "J'ai cr√©√© mon syst√®me de design",
        "J'ai impl√©ment√© le routage",
        "J'ai d√©velopp√© les composants de base"
      ]
    }
  ];

  const apiInfo = {
    title: "Mon Int√©gration avec Punk API",
    description: "J'utilise la Punk API, une API RESTful publique qui me fournit des donn√©es d√©taill√©es sur les bi√®res craft. Voici comment je l'ai int√©gr√©e :",
    features: [
      {
        title: "Mes Requ√™tes API",
        description: "J'utilise Axios pour effectuer mes requ√™tes HTTP vers l'API. J'ai impl√©ment√© la r√©cup√©ration de la liste des bi√®res, la recherche par nom, et le filtrage par caract√©ristiques.",
        code: `const fetchBeers = async (page: number) => {
  const response = await axios.get(\`https://api.punkapi.com/v2/beers?page=\${page}&per_page=20\`);
  return response.data;
};`
      },
      {
        title: "Ma Gestion des Donn√©es",
        description: "J'ai choisi React Query pour g√©rer le cache des donn√©es et les √©tats de chargement. Cela me permet d'offrir une exp√©rience utilisateur fluide avec des temps de chargement optimis√©s.",
        code: `const { data, isLoading, error } = useQuery(['beers', page], 
  () => fetchBeers(page),
  { keepPreviousData: true }
);`
      },
      {
        title: "Mes Types TypeScript",
        description: "J'ai cr√©√© des types TypeScript pour assurer la s√©curit√© du typage et am√©liorer mon exp√©rience de d√©veloppement.",
        code: `interface Beer {
  id: number;
  name: string;
  tagline: string;
  description: string;
  image_url: string;
  abv: number;
  ibu: number;
  // ... autres propri√©t√©s
}`
      }
    ]
  };

  return (
    <div className="info-container">
      <h1 className="page-title">üç∫ Documentation Technique</h1>
      <div className="info-content">
        <div className="info-header">
          <h1>√Ä Propos de Mon Projet</h1>
          <p>D√©couvrez les technologies et l'architecture que j'ai utilis√©es pour d√©velopper cette application de bi√®res craft.</p>
        </div>

        <section className="tech-stack">
          <h2>Stack Technique</h2>
          <div className="tech-grid">
            {techStack.map((stack, index) => (
              <div key={index} className="tech-category">
                <h3>{stack.category}</h3>
                <div className="tech-items">
                  {stack.items.map((item, itemIndex) => (
                    <div key={itemIndex} className="tech-item">
                      <span className="tech-icon">{item.icon}</span>
                      <h4>{item.name}</h4>
                      <p>{item.description}</p>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </section>

        <section className="development">
          <h2>Mon Processus de D√©veloppement</h2>
          <div className="development-steps">
            {developmentSteps.map((step, index) => (
              <div key={index} className="step">
                <div className="step-header">
                  <span className="step-icon">{step.icon}</span>
                  <h3>{step.title}</h3>
                </div>
                <ul>
                  {step.steps.map((subStep, subIndex) => (
                    <li key={subIndex}>{subStep}</li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </section>

        <section className="api-integration">
          <h2>{apiInfo.title}</h2>
          <p className="api-description">{apiInfo.description}</p>
          <div className="api-features">
            {apiInfo.features.map((feature, index) => (
              <div key={index} className="api-feature">
                <h3>{feature.title}</h3>
                <p>{feature.description}</p>
                <pre className="code-block">
                  <code>{feature.code}</code>
                </pre>
              </div>
            ))}
          </div>
        </section>

        <section className="project-features">
          <h2>‚ú® Fonctionnalit√©s Principales ‚ú®</h2>
          <div className="features-grid">
            <div className="feature-card">
              <span className="feature-icon">üç∫</span>
              <h3>Catalogue de Bi√®res</h3>
              <p>Explorez notre s√©lection de bi√®res artisanales avec filtres avanc√©s</p>
            </div>
            <div className="feature-card">
              <span className="feature-icon">üè≠</span>
              <h3>Brasseries Partenaires</h3>
              <p>D√©couvrez les meilleures brasseries artisanales du Pays Basque</p>
            </div>
            <div className="feature-card">
              <span className="feature-icon">‚ù§Ô∏è</span>
              <h3>Syst√®me de Favoris</h3>
              <p>Gardez une trace de vos bi√®res pr√©f√©r√©es</p>
            </div>
            <div className="feature-card">
              <span className="feature-icon">üì±</span>
              <h3>Design Responsive</h3>
              <p>Une exp√©rience optimale sur tous les appareils</p>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
};

export default Infos;
